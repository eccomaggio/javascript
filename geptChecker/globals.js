
    function indexDb(db) {
      for (const i in db) {
        db[i].unshift(parseInt(i));
      }
      return db;
    }


    const HTM = {
      G_level: document.getElementById("t1_level"),
      K_theme: document.getElementById("t1_theme"),
      form: document.getElementById("t1_form"),
      resultsLegend: document.getElementById("t1_results_legend"),
      resultsText: document.getElementById("t1_results_text"),
      t1_title: document.getElementById("t1_term_legend"),
      root_css: document.documentElement,
      refreshButton: document.getElementById("refresh_button"),
      rawDiv: document.getElementById("t2_raw_text"),
      finalTextDiv: document.getElementById("t2_final_text"),
      finalLegend: document.getElementById("t2_final_legend"),
      finalInfoDiv: document.getElementById("t2_final_info"),
      backupButton: document.getElementById("backup-btn"),
      backupDialog: document.getElementById("backup-dlg"),
      backupSave: document.getElementById("backup-save"),
      settingsContent: document.getElementById("settings-content")
    };




    const lookup = {

      // ## These are used in the tab 1 GUI
      legends: {
        term: "Search",
        match: "Match",
        level: "Level",
        theme: "Theme",
        pos: "PoS",
        results: "Results"
      },

      // display_levels: {
      //   e: "初",
      //   i: "中",
      //   h: "高",
      //   o: "",
      //   c: ""
      // }


      // ## These correlate with the numbers in the dBs
      level_headings: [
        // "elementary",
        // "intermediate",
        // "high-intermediate",
        "elem",
        "int",
        "hi-int",
        "Animals & insects (動物/昆蟲)",
        "Articles & determiners (冠詞/限定詞)",
        "Be & auxiliarie (be動詞/助動詞)",
        "Clothing & accessories (衣服/配件)",
        "Colors (顏色)",
        "Conjunctions (連接詞)",
        "Family (家庭)",
        "Food & drink (食物/飲料)",
        "Forms of address (稱謂)",
        "Geographical terms (地理名詞)",
        "Health (健康)",
        "Holidays & festivals",
        "Houses & apartments (房子/公寓)",
        "Interjections (感嘆詞)",
        "Money (金錢)",
        "Numbers (數字)",
        "Occupations (工作)",
        "Other adjectives (其他形容詞)",
        "Other adverbs (其他副詞)",
        "Other nouns (其他名詞)",
        "Other verbs (其他動詞)",
        "Parts of body (身體部位)",
        "People (人)",
        "Personal characteristics (個性/特點)",
        "Places & directions (地點/方位)",
        "Prepositions (介系詞)",
        "Pronouns (代名詞)",
        "School (學校)",
        "Sizes & measurements (尺寸/計量)",
        "Sports, interest & hobbies(運動 / 興趣 / 嗜好)",
        "Tableware (餐具)",
        "Time (時間)",
        "Transportation (運輸)",
        "Weather & nature (天氣/自然)",
        "Wh-words (疑問詞)",
        "AWL 1",
        "AWL 2",
        "AWL 3",
        "AWL 4",
        "AWL 5",
        "AWL 6",
        "AWL 7",
        "AWL 8",
        "AWL 9",
        "AWL 10"
 ],

      // ## Computed levels
      offlist_subs: [
        "offlist",
        "contraction",
        "digit",
        "name"
      ],


      // ## THE FOLLOWING ALL TRY TO INTERPRET WORD INFLECTIONS TO MATCH TO dB
      // ## plural nouns, 3rd person present verbs
      s_subs: {
        // _: [-3, -2],
        _suffix: "s",
        ies: "y",
        oes: "o",
        ves: "f",
        ses: "sis",
        es: "" //,
        //s: ""
      },

      // ## adverbs
      y_subs: {
        // _: [-3],
        _suffix: "ly",
        ily: "y",
        lly: "l",
        ely: "e",
        ically: "ic",
        bly: "ble" //,
        //ly: ""
      },

      // ## gerunds
      g_subs: {
        // _: [-5, -4, -3],
        _suffix: "ing",
        bbing: "b",
        dding: "d",
        ffing: "f",
        gging: "g",
        lling: "l",
        mming: "m",
        nning: "n",
        pping: "p",
        rring: "r",
        ssing: "s",
        tting: "t",
        vving: "v",
        zzing: "z",
        ying: "ie",
        cking: "c",
        ing: "e"
      },


      // ## superlative adjs
      est_subs: {
        // _: [-5, -4, -3],
        _suffix: "est",
        bbest: "b",
        ddest: "d",
        ffest: "f",
        ggest: "g",
        llest: "l",
        mmest: "m",
        nnerst: "n",
        ppest: "p",
        rrest: "r",
        ssest: "s",
        ttest: "t",
        vvest: "v",
        zzest: "z",
        iest: "y",
        est: "e"
      },

      // ## comparative adjs & agent nouns? (good idea??)
      er_subs: {
        // _: [-4, -3, -2],
        _suffix: "er",
        bber: "b",
        dder: "d",
        ffer: "f",
        gger: "g",
        ller: "l",
        mmer: "m",
        nner: "n",
        pper: "p",
        rrer: "r",
        sser: "s",
        tter: "t",
        vver: "v",
        zzer: "z",
        ier: "y",
        er: "e"
      },

      // ## regular past -ed endings
      d_subs: {
        // _: [-4, -3, -2],
        _suffix: "ed",
        bbed: "b",
        dded: "d",
        ffed: "f",
        gged: "g",
        lled: "l",
        mmed: "m",
        nned: "n",
        pped: "p",
        rred: "r",
        ssed: "s",
        tted: "t",
        vved: "v",
        zzed: "z",
        ied: "y",
        ed: "e"
      },

      foreign_plurals: [
        ["ae", "a"],
        ["a", "um"],
        ["a", "on"],
        // ["ia","ion"],
        ["i", "us"],
        ["i", "o"],
        ["es", "is"],
        ["ices", "ex"],
        ["ices", "ix"],
        ["ives", "ife"],
        ["ooves", "oof"],
        ["arves", "arf"],
        ["lves", "lf"],
        ["men", "man"]
      ],

      contractions: [
        "m",
        "re",
        "ve",
        "ll",
        "d",
        "t",
        "s",
      ],

      irregPlural: {
        feet: "foot",
        geese: "goose",
        men: "man",
        mice: "mouse",
        teeth: "tooth",
        women: "woman",
        children: "child",
        oxen: "ox",
        an: "a"
      },

      irregNegVerb: {
        aren: "be",
        couldn: "could",
        didn: "do",
        doesn: "do",
        don: "do",
        hadn: "have",
        hasn: "have",
        haven: "have",
        isn: "be",
        mightn: "might",
        mustn: "must",
        needn: "need",
        shan: "shall",
        shouldn: "should",
        wasn: "be",
        weren: "be",
        won: "will",
        wouldn: "would",
        cannot: "can",
      },

      irregVerb: {
        am: "be",
        is: "be",
        are: "be",
        were: "be",
        was: "be",
        been: "be",
        has: "have",
        does: "do",
        arisen: "arise",
        arose: "arise",
        ate: "eat",
        babysat: "babysit",
        beaten: "beat",
        became: "become",
        began: "begin",
        begun: "begin",
        bent: "bend",
        // bet: "bet",
        bit: "bite",
        bitten: "bite",
        bled: "bleed",
        blew: "blow",
        blown: "blow",
        bought: "buy",
        bound: "bind",
        bred: "breed",
        broke: "break",
        broken: "break",
        brought: "bring",
        built: "build",
        burnt: "burn",
        came: "come",
        caught: "catch",
        chose: "choose",
        chosen: "choose",
        clung: "cling",
        creep: "crept",
        dealt: "deal",
        did: "do",
        done: "do",
        dove: "dive",
        drank: "drink",
        drawn: "draw",
        dreamt: "dream",
        drew: "draw",
        driven: "drive",
        drove: "drive",
        drunk: "drink",
        dug: "dig",
        dwelt: "dwell",
        eaten: "eat",
        fallen: "fall",
        fed: "feed",
        fell: "fall",
        felt: "feel",
        fled: "flee",
        flew: "fly",
        flung: "fling",
        flown: "fly",
        forbade: "forbid",
        forbidden: "forbid",
        forgave: "forgive",
        forgiven: "forgive",
        forgot: "forget",
        forgotten: "forget",
        foresaw: "foresee",
        fought: "fight",
        found: "find",
        froze: "freeze",
        frozen: "freeze",
        gave: "give",
        given: "give",
        gone: "go",
        got: "get",
        gotten: "get",
        grew: "grow",
        ground: "grind",
        grown: "grow",
        had: "have",
        hanged: "hang",
        heard: "hear",
        held: "hold",
        hid: "hide",
        hidden: "hide",
        hung: "hang",
        kept: "keep",
        knew: "know",
        known: "know",
        laid: "lay",
        lain: "lie",
        learnt: "learn",
        led: "lead",
        left: "leave",
        lent: "lend",
        lit: "light",
        lost: "lose",
        made: "make",
        meant: "mean",
        met: "meet",
        mown: "mow",
        outdid: "outdo",
        outdone: "outdo",
        overcame: "overcome",
        paid: "pay",
        pled: "plead",
        proven: "prove",
        ran: "run",
        rang: "ring",
        ridden: "ride",
        risen: "rise",
        rode: "ride",
        rose: "rise",
        rung: "ring",
        said: "say",
        sang: "sing",
        sank: "sink",
        sat: "sit",
        saw: "see",
        sought: "seek",
        seen: "see",
        sent: "send",
        shaken: "shake",
        shone: "shine",
        shook: "shake",
        shot: "shoot",
        showed: "show",
        shown: "show",
        slept: "sleep",
        slid: "slide",
        smelt: "smell",
        sold: "sell",
        sped: "speed",
        spent: "spend",
        // spilt: "spill",
        spoke: "speak",
        spoken: "speak",
        spun: "spin",
        sprang: "spring",
        sprung: "spring",
        stank: "stink",
        stunk: "stink",
        stole: "steal",
        stolen: "steal",
        stood: "stand",
        strove: "strive",
        striven: "strive",
        struck: "strike",
        stuck: "stick",
        stung: "sting",
        sung: "sing",
        sunk: "sink",
        swam: "swim",
        swept: "sweep",
        swore: "swear",
        sworn: "swear",
        swum: "swim",
        swung: "swing",
        taken: "take",
        taught: "teach",
        thought: "think",
        threw: "throw",
        thrown: "throw",
        told: "tell",
        took: "take",
        tore: "tear",
        torn: "tear",
        underwent: "undergo",
        undergone: "undergo",
        understood: "understand",
        wept: "weep",
        went: "go",
        withdrawn: "withdraw",
        withdrew: "withdraw",
        woke: "wake",
        woken: "wake",
        won: "win",
        wore: "wear",
        worn: "wear",
        written: "write",
        wrote: "write",
        wrung: "wring"
      },

      repeatableWords: [
        "a",
        "and",
        "but",
        "or",
        "so",
        "the",
        "this",
        "that",
        "these",
        "those",
        "here",
        "there",
        "not",
        "no",
        "yes",
        "be",
        "are",
        "have",
        "do",
        "he",
        "him",
        "his",
        "I",
        "me",
        "mine",
        "my",
        "you",
        "your",
        "yours",
        "she",
        "her",
        "hers",
        "it",
        "its",
        "we",
        "us",
        "our",
        "ours",
        "they",
        "their",
        "theirs",
        "one",
        "this",
        "that",
        "these",
        "those",
        "who",
        "which",
        "where",
        "when",
        "how",
        "why",
        "what",
        "that",
        "more",
        "in",
        "on",
        "at",
        "of",
        "by",
        "with",
        "to",
        "from",
        "for",
        "m",
        "re",
        "ve",
        "ll",
        "d",
        "t",
        "s",
        "wh",
        "yn",
        "sr",
        "some",
        "other",
        "about"
      ],

      setOfCommonNames: new Set([
        "aaron",
        "abigail",
        "adam",
        "alan",
        "albert",
        "alexander",
        "alexis",
        "alice",
        "amanda",
        "amber",
        "amy",
        "andrea",
        "andrew",
        "angela",
        "ann",
        "anne",
        "anna",
        "anthony",
        "arthur",
        "ashley",
        "austin",
        "barbara",
        "benjamin",
        "becky",
        "betty",
        "beverly",
        "billy",
        "bobby",
        "brandon",
        "brenda",
        "brian",
        "brittany",
        "bruce",
        "bryan",
        "carl",
        "carol",
        "carolyn",
        "catherine",
        "charles",
        "charlotte",
        "cheryl",
        // "christian",
        "christina",
        "christine",
        "christopher",
        "cindy",
        "cynthia",
        "daniel",
        "danielle",
        "david",
        "deborah",
        "debra",
        "denise",
        "dennis",
        "diana",
        "diane",
        "donald",
        "donna",
        "doris",
        "dorothy",
        "douglas",
        "dylan",
        "edward",
        "elijah",
        "elizabeth",
        "emily",
        "emma",
        "eric",
        "ethan",
        "eugene",
        "evelyn",
        "frances",
        "frank",
        "gabriel",
        "gary",
        "george",
        "gerald",
        "gloria",
        // "grace",
        "gregory",
        "hannah",
        "harold",
        "heather",
        "helen",
        "henry",
        "hogan",
        "ingrid",
        "iria",
        "isabella",
        "jack",
        "jacob",
        "jacqueline",
        "james",
        "janet",
        "janice",
        "jason",
        "jean",
        "jeffrey",
        "jen",
        "jennifer",
        "jeremy",
        "jerry",
        "jesse",
        "jessica",
        "joan",
        "joe",
        "john",
        "jonathan",
        "jordan",
        "jose",
        "joseph",
        "joshua",
        //"joy",
        "joyce",
        "juan",
        "judith",
        "judy",
        "julia",
        "julie",
        "justin",
        "karen",
        "katherine",
        "kathleen",
        "kathryn",
        "kayla",
        "keith",
        "kelly",
        "kenneth",
        "kevin",
        "kimberly",
        "kyle",
        "larry",
        "laura",
        "lauren",
        "lawrence",
        "linda",
        "lisa",
        "logan",
        "lori",
        "louis",
        "lynn",
        "madison",
        "margaret",
        "maria",
        "marie",
        "marilyn",
        "mark",
        "martha",
        "mary",
        "mason",
        "matthew",
        "megan",
        "melissa",
        "michael",
        "michelle",
        "miranda",
        "nancy",
        "natalie",
        "nathan",
        "nicholas",
        "nicole",
        "noah",
        "olivia",
        "ouyang",
        "pamela",
        "patricia",
        "patrick",
        "paul",
        "peter",
        "philip",
        "rachel",
        "ralph",
        "randy",
        "raymond",
        "rebecca",
        "richard",
        "robert",
        "roger",
        "ronald",
        "roy",
        "russell",
        "ruth",
        "ryan",
        "sally",
        "samantha",
        "samuel",
        "sandra",
        "sara",
        "sarah",
        "scott",
        "sean",
        "sharon",
        "shirley",
        "simon",
        "sophia",
        "stan",
        "stephanie",
        "stephen",
        "steven",
        "susan",
        "teresa",
        "terry",
        "theresa",
        "thomas",
        "timothy",
        "tim",
        "tyler",
        "victoria",
        "vincent",
        "virginia",
        "vivian",
        "walter",
        "wayne",
        "william",
        "willie",
        "zachary"
      ])
    }


    // ## Global constants
    const C = {
      ID: 0,
      LEMMA: 1,
      POS: 2,
      LEVEL: 3,
      NOTE: 4,
      isCOMPOUND: 5,
      punctuation: /[!"#$%&'()*+,./:;<=>?@[\]^_`{}~]/g,
      // punctuation: new RegExp('[!"#$%&\'()*+,./:;<=>?@[\]^_`{}~]','g'),
      // ## removed hyphen & bar (- |)
      NBSP: String.fromCharCode(160),
      backupIDs: ["backup_0", "backup_1"],
      awl_index0: 37
      // compoundMaxLen: 1
    }

    // ## Global variables
    let V = {
      // ## offlist word db uses negative ids (translate to positive index) so no 0
      offlistDb: [["unused"]],
      offlistIndex: 1,
      wordStats: {},
      isAutoRefresh: true,
      currentDb: {},
      OFFLIST: lookup.level_headings.length,
      // const level_subs = lookup.level_headings.concat(lookup.offlist_subs);
      level_subs: lookup.level_headings.concat(lookup.offlist_subs)
    }

    if (!localStorage.getItem("mostRecent")) localStorage.setItem("mostRecent", C.backupIDs[0]);

