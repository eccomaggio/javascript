# HOW TO WORK WITH THIS APP
corrections should be made to individual files. Final file should be assembled using `toggleWordlistHTML.py`.
The name of the stand alone file should then be changed to `wordlistTool.htm`.

## Logic:
open geptchecker
read through each line
ignore anything commented out (in html / css / javascript) EXCEPT:

### create files (i.e. "split mode") if encounter `data-title`:
<script data-title="blah.js"></script>
—> <script src="blah.js"></script>

<style data-title="blah.css"></style>
—> <link href="blah.css" rel="stylesheet" />

OR
### combine files if finds above links to external files,
("combine-into-single-file mode")
open filename & replace link with contents into tags

# ISSUES TO RESOLVE
*in-place editing still glitchy (especially adding text at end.) NB: this seems to be caused by 'refresh' button showing, but mode being set to 'autorefresh'!!
refresh mode not always saved? problem with 'reset'?
hidden characters (e.g. @EOL@ displayed in backup) in in-place editing.

ALTERNATIVE:
change 'in-place' to show multiple senses ONLY as red squiggly underline; resolved in info box

# LIST OF CORRECTIONS:
4-11-2023 correct vocab mistake: (gept.js / .json) 'benefit' changed from 'nj' to 'nv' so that 'benefited' is correctly recognized
14-11-2023 vocab mistake: (global.js) 'misunderstood' added as irregular past of 'misunderstand'
03-01-2024 fixed cursor handling for in-place editing mode (but other fixes needed to make this mode work)
07-01-2024 fixed switching between editing & refresh modes; cleaned up code; added more acceptable patterns for digits
08-01-2024 fixed missing newlines when switching from in-place to 2-col
... grey out 'auto refresh' option when in in-place mode


20-03-2024 added corrections to wordlist creation: streamlined process a little & Americanized/corrected AWL source file .tsv's

many changes (untracked here, but on GIT)

Key to .json vocabulary lists: (AWL based on the table at https://www.eapfoundation.com/vocab/academic/awllists/#):
1) headword
2) sublist number
3) optional word family words

[
    "abstract",                lemma
    "jnv",                     list of parts of speech (here: adj, noun, verb)
    [
        1,                     GEPT level (int+)
        43,                    AWL level (6+)
        3                      status++ (here: in both lists)
    ],
    "抽象的，摘要|abstract"      chinese gloss (if any) + separator + awl headword (if any)
], ...

    + according to position in level_headings
    ++ given by Pos enum:
      AWL_ONLY = 1
      GEPT_ONLY = 2
      AWL_AND_GEPT = 3

MAP OF PROJECT:

TAB 1 WORKFLOW:
HTM.inputLemma: addEventListener(debounce)
-> wordSearch()
	wordGetFormData()
	wordCheckFormData()
	wordBuildiSearchTerms()
	wordRunSearch()
		stripOutRegex()
		checkDerivations()
		lazyCheckAgainstCompounds()
		checkNegativePrefix()
		checkAllowedVariants()
	wordFormatResultsAsHTML()
	wordDisplayResults()




TAB 2 WORKFLOW:

HTM.workingDiv: addEventListener OR
forceUpdateInputDiv()
--> normalizePastedText(e)
textMarkup()
	textGetLatest()
	lookups()
		normalizeRawText()
		chunkText()
		lookupCompoundWords()
		lookupAllWords()
	buildHTML()
		getAllLevelStats()
		buildHTMLtext()
		buildHTMLrepeatList()
		buildLevelStats()


CAPTURING / INSERTING CURSOR
automatically moved with every keyup with updateCursorPos()
updateInputDiv()
	processText()
		getRevisedText()
			insertCursorPlaceholder() inserts as CURSOR.simpleText
			chunkText() + tokenize() then insert as ["", "mc"]
		buildHTMLtext()
	displayProcessedText()
		displayWorkingText()
			setCursorPos()