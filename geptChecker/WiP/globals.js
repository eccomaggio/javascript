/*
Key to .json vocabulary lists: (AWL based on the table at https://www.eapfoundation.com/vocab/academic/awllists/#):
1) headword
2) sublist number
3) optional word family words

[
    "abstract",                lemma
    "jnv",                     list of parts of speech (here: adj, noun, verb)
    [
        1,                     GEPT level (int+)
        43,                    AWL level (6+)
        3                      status++ (here: in both lists)
    ],
    OLD: "抽象的，摘要|abstract"      chinese gloss (if any) + separator + awl headword (if any)
		NEW: [chinese, notes, awl headword]
], ...

    + according to position in level_headings
    ++ given by Pos enum:
      AWL_ONLY = 1
      GEPT_ONLY = 2
      AWL_AND_GEPT = 3
			new: OFFLIST = -1
			new: KIDS = 4
*/


function indexDb(db) {
  for (const i in db) {
    db[i].unshift(parseInt(i));
  }
  return db;
}


const HTM = {
  root_css: document.documentElement,
  G_level: document.getElementById("t1_level"),
  K_theme: document.getElementById("t1_theme"),
  B_AWL: document.getElementById("t1_awl"),
  form: document.getElementById("t1_form"),
  kidsTheme: document.getElementById("t1_theme_select"),
  inputLemma: document.getElementById("t1_term_i"),
  resultsLegend: document.getElementById("t1_results_legend"),
  resultsText: document.getElementById("t1_results_text"),
  t1_title: document.getElementById("t1_term_legend"),
  workingDiv: document.getElementById("t2_raw_text"),
  finalLegend: document.getElementById("t2_final_legend"),
  finalInfoDiv: document.getElementById("t2_final_info"),
  repeatsList: document.getElementById("t2_repeats_list"),
  tabHead: document.getElementsByTagName("tab-head")[0],
  tabBody: document.getElementsByTagName("tab-body")[0],
  textTabTag: document.getElementById("t1_tab_tag"),
  clearButton: document.getElementById("clear_btn"),
  resetButton: document.getElementById("reset_btn"),
  settingsMenu: document.getElementById("dropdown"),
  backupButton: document.getElementById("backup-btn"),
  backupDialog: document.getElementById("backup-dlg"),
  backupSave: document.getElementById("backup-save"),
  backupSave2: document.getElementById("backup-save2"),
  settingsContent: document.getElementById("settings-content"),
  selectDb: document.getElementById("select-db"),
  selectFontSize: document.getElementById("select-font"),
  helpAll: document.getElementById("help-all"),
  help_state: document.getElementById("help-details"),
  // level_state: document.getElementById("level-details"),
  // repeat_state: document.getElementById("repeat-details"),
};

// ## Global constants
let C = {
  isCOMPOUND: 5,
  GEPT_LEVEL: 0,
  AWL_LEVEL: 1,
  STATUS: 2,
  AWL_ONLY: 1,
  // GEPT_ONLY: 2,
  GEPT_ONLY: -1,
  AWL_AND_GEPT: 3,
  FIND_AWL_ONLY: 100,
  FIND_GEPT_ONLY: 200,
  punctuation: /[!"#$%&'()*+,./:;<=>?@[\]^_`{}~]/g,
  punctuation_lite: /[,.?!'"()\[\]{}]/g,
  // INFO: removed hyphen & bar (- |)
  // HTMLescape: { "<": "&lt;", ">": "&gt;", "&": "&amp;", "\"": "&quot;" },
  // HTMLunEscape: { "&lt;" : "<", "&gt;" : ">", "&amp;" : "&", "&quot;" : "\"" },

  NBSP: String.fromCharCode(160),
  backupIDs: ["long_term", "short_term"],
  awl_level_offset: 37,
  kids_level_offset: 3,
  NOTE_SEP: "|",
  // ** local storage: [name-of-storage-variable, default-value]
  DEFAULT_STATE: {
    db_state: 0,
    tab_state: 0,
    limit_state: -1,
    help_state: 1,
    level_state: 1,
    repeat_state: 1,
  },
  DEFAULT_tab: 0,
  MATCHES: {
    exact: ["^", "$"],
    contains: ["", ""],
    starts: ["^", ".*"],
    ends: [".*", "$"]
  },
  GEPT: 0,
  BESTEP: 1,
  Kids: 2,
  LEVEL_LIMIT_CLASS: "wrong",
  LEVEL_LIMITS: ["level-i", "level-h", "level-o"],
  SLICE: "___",
}


// ## Global variables
let V = {
  // ## offlist word db uses negative ids (translate to positive index) so no 0
  // offlistDb: [["unused"]],
  offlistDb: [new Entry("unused", "", [-1, -1, -1], "", 0)],
  offlistIndex: 1,
  tallyOfIDreps: {},
  setOfLemmaID: new Set(),
  currentDb: {},
  currentDbChoice: C.GEPT,
  OFFLIST: 0,
  levelSubs: [],
  currentTab: null,
  refreshRequired: false,
  timer: null,
  cursorOffset: 0,
  oldCursorOffset: 0,
  cursorOffsetNoMarks: 0,
  cursorIncrement: 0,
  isExactMatch: true,   // if false, it will match partial words, e.g. an > analytical
  current: {
    db_state: 0,
    tab_state: 0,
    limit_state: -1,
    help_state: 1,
    level_state: 1,
    repeat_state: 1,
  },
  levelLimitStr: "",
  levelLimitActiveClassesArr: [],
  levelLimitRule: null,
  appHasBeenReset: true,
  idOfAM: 0,
}

const CURSOR = {
  tag: "span",
  id: "cursorPosHere",
  HTMLtext: "<span id='cursorPosHere'></span>",
  simpleText: "CRSR",
  text: C.SLICE + "CRSR" + C.SLICE,
}

const EOL = {
  HTMLtext: "<hr>",
  tagName: "hr",
  simpleText: "EOL",
  text: C.SLICE + "EOL" + C.SLICE,
}


if (!localStorage.getItem("mostRecent")) localStorage.setItem("mostRecent", C.backupIDs[0]);

const LOOKUP = {

  // ## These are used in the tab 1 GUI
  legends: {
    term: "Search",
    match: "Match",
    level: "Level",
    theme: "Theme",
    pos: "PoS",
    results: "Results",
  },


  // ## These correlate with the numbers in the dBs
  level_headings: [
    "elem (A2)",
    "int (B1)",
    "hi-int (B2)",
    "Animals & insects (動物/昆蟲)",
    "Articles & determiners (冠詞/限定詞)",
    "Be & auxiliarie (be動詞/助動詞)",
    "Clothing & accessories (衣服/配件)",
    "Colors (顏色)",
    "Conjunctions (連接詞)",
    "Family (家庭)",
    "Food & drink (食物/飲料)",
    "Forms of address (稱謂)",
    "Geographical terms (地理名詞)",
    "Health (健康)",
    "Holidays & festivals",
    "Houses & apartments (房子/公寓)",
    "Interjections (感嘆詞)",
    "Money (金錢)",
    "Numbers (數字)",
    "Occupations (工作)",
    "Other adjectives (其他形容詞)",
    "Other adverbs (其他副詞)",
    "Other nouns (其他名詞)",
    "Other verbs (其他動詞)",
    "Parts of body (身體部位)",
    "People (人)",
    "Personal characteristics (個性/特點)",
    "Places & directions (地點/方位)",
    "Prepositions (介系詞)",
    "Pronouns (代名詞)",
    "School (學校)",
    "Sizes & measurements (尺寸/計量)",
    "Sports, interest & hobbies(運動 / 興趣 / 嗜好)",
    "Tableware (餐具)",
    "Time (時間)",
    "Transportation (運輸)",
    "Weather & nature (天氣/自然)",
    "Wh-words (疑問詞)",
    "AWL 1",
    "AWL 2",
    "AWL 3",
    "AWL 4",
    "AWL 5",
    "AWL 6",
    "AWL 7",
    "AWL 8",
    "AWL 9",
    "AWL 10",
  ],

  // ## PoS expansions
  pos_expansions: {
    n: 'noun',
    v: 'verb',
    a: 'article',
    d: 'determiner',
    x: 'auxilliary verb',
    j: 'adjective',
    c: 'conjunction',
    i: 'interjection',
    m: 'number',
    b: 'adverb',
    p: 'preposition',
    r: 'pronoun',
    t: 'interjection',
    f: 'infinitive',
  },

  symbols: [
    "&",
    "=",
    "%",
    "<",
    ">",
    "+",
    "#",
    "@",
    "$",
    "£",
    "¢",
    "¥",
    "th",
    "st",
    "rd",
  ],

  // ## Computed levels
  offlist_subs: [
    "unknown",
    "offlist",
    "contraction",
    "digit",
    "name",
    "symbol",
  ],


  // ## THE FOLLOWING ALL TRY TO INTERPRET WORD INFLECTIONS TO MATCH TO dB

  // ## plural nouns, 3rd person present verbs
  s_subs: [
    ["ies", "y"],
    ["oes", "o"],
    ["ves", "fe"],
    ["ves", "f"],
    ["es", "e"],
    ["es", ""],
    ["s", ""],
  ],

  ly_subs: [
    ["ily", "y"],
    ["lly", "l"],
    ["ely", "e"],
    ["ically", "ic"],
    ["bly", "ble"],
    ["ly", ""],
  ],


  // ## gerunds
  ing_subs: [
    ["bbing", "b"],
    ["dding", "d"],
    ["ffing", "f"],
    ["gging", "g"],
    ["lling", "l"],
    ["mming", "m"],
    ["nning", "n"],
    ["pping", "p"],
    ["rring", "r"],
    ["ssing", "s"],
    ["tting", "t"],
    ["vving", "v"],
    ["zzing", "z"],
    ["ying", "ie"],
    ["cking", "c"],
    ["ing", "e"],
    ["ing", ""],
  ],


  // ## superlative adjs
  est_subs: [
    ["bbest", "b"],
    ["ddest", "d"],
    ["ffest", "f"],
    ["ggest", "g"],
    ["llest", "l"],
    ["mmest", "m"],
    ["nnerst", "n"],
    ["ppest", "p"],
    ["rrest", "r"],
    ["ssest", "s"],
    ["ttest", "t"],
    ["vvest", "v"],
    ["zzest", "z"],
    ["iest", "y"],
    ["est", "e"],
    ["est", ""],
  ],

  // ## comparative adjs & agent nouns? (good idea??)
  er_subs: [
    ["bber", "b"],
    ["dder", "d"],
    ["ffer", "f"],
    ["gger", "g"],
    ["ller", "l"],
    ["mmer", "m"],
    ["nner", "n"],
    ["pper", "p"],
    ["rrer", "r"],
    ["sser", "s"],
    ["tter", "t"],
    ["vver", "v"],
    ["zzer", "z"],
    ["ier", "y"],
    ["er", "e"],
    ["er", ""],
  ],

  // ## regular past -ed endings
  ed_subs: [
    ["bbed", "b"],
    ["dded", "d"],
    ["ffed", "f"],
    ["gged", "g"],
    ["lled", "l"],
    ["mmed", "m"],
    ["nned", "n"],
    ["pped", "p"],
    ["rred", "r"],
    ["ssed", "s"],
    ["tted", "t"],
    ["vved", "v"],
    ["zzed", "z"],
    ["ied", "y"],
    ["ed", "e"],
    ["ed", ""],
    ["d", ""],
  ],

  prefixes: [
    "un", "in", "im", "il", "ir",
  ],


  foreign_plurals: [
    ["ae", "a"],
    ["a", "um"],
    ["a", "on"],
    ["ia", "ion"],
    ["i", "us"],
    ["i", "o"],
    ["es", "is"],
    ["ices", "ex"],
    ["ices", "ix"],
    ["ives", "ife"],
    ["ooves", "oof"],
    ["arves", "arf"],
    ["lves", "lf"],
    ["men", "man"],
  ],

  contractions: [
    "m",
    "re",
    "ve",
    "ll",
    "d",
    "t",
    "s",
    "&",
  ],

  irregPlural: {
    feet: "foot",
    geese: "goose",
    men: "man",
    mice: "mouse",
    teeth: "tooth",
    women: "woman",
    children: "child",
    oxen: "ox",
    others: "other",  // ** irregular because it's an adj/pronoun
    // an: "a"
  },

  irregNegVerb: {
    aren: "be",
    couldn: "could",
    didn: "do",
    doesn: "do",
    don: "do",
    hadn: "have",
    hasn: "have",
    haven: "have",
    isn: "be",
    mightn: "might",
    mustn: "must",
    needn: "need",
    shan: "shall",
    shouldn: "should",
    wasn: "be",
    weren: "be",
    won: "will",
    wouldn: "would",
    cannot: "can",
  },

  irregVerb: {
    // am: "be",
    // is: "be",
    // are: "be",   // these are listed as sep words in the wordlist
    were: "be",
    was: "be",
    been: "be",
    has: "have",
    does: "do",
    arisen: "arise",
    arose: "arise",
    ate: "eat",
    awoken: "awake",
    babysat: "babysit",
    beaten: "beat",
    became: "become",
    began: "begin",
    begun: "begin",
    bent: "bend",
    // bet: "bet",
    bit: "bite",
    bitten: "bite",
    bled: "bleed",
    blew: "blow",
    blown: "blow",
    bore: "bear",
    born: "bear", // this only works if bear(v) precedes noun in dB!
    bought: "buy",
    bound: "bind",
    bred: "breed",
    broke: "break",
    broken: "break",
    brought: "bring",
    built: "build",
    burnt: "burn",
    came: "come",
    caught: "catch",
    chose: "choose",
    chosen: "choose",
    clung: "cling",
    creep: "crept",
    dealt: "deal",
    did: "do",
    done: "do",
    dove: "dive",
    drank: "drink",
    drawn: "draw",
    dreamt: "dream",
    drew: "draw",
    driven: "drive",
    drove: "drive",
    drunk: "drink",
    dug: "dig",
    dwelt: "dwell",
    eaten: "eat",
    fallen: "fall",
    fed: "feed",
    fell: "fall",
    felt: "feel",
    fled: "flee",
    flew: "fly",
    flung: "fling",
    flown: "fly",
    forbade: "forbid",
    forbidden: "forbid",
    forgave: "forgive",
    forgiven: "forgive",
    forgot: "forget",
    forgotten: "forget",
    foresaw: "foresee",
    fought: "fight",
    found: "find",
    froze: "freeze",
    frozen: "freeze",
    gave: "give",
    given: "give",
    gone: "go",
    got: "get",
    gotten: "get",
    grew: "grow",
    ground: "grind",
    grown: "grow",
    had: "have",
    hanged: "hang",
    heard: "hear",
    held: "hold",
    hid: "hide",
    hidden: "hide",
    hung: "hang",
    kept: "keep",
    knew: "know",
    known: "know",
    laid: "lay",
    lain: "lie",
    learnt: "learn",
    led: "lead",
    left: "leave",
    lent: "lend",
    lit: "light",
    lost: "lose",
    made: "make",
    meant: "mean",
    met: "meet",
    misunderstood: "misunderstand",
    mown: "mow",
    outdid: "outdo",
    outdone: "outdo",
    overcame: "overcome",
    paid: "pay",
    pled: "plead",
    proven: "prove",
    ran: "run",
    rang: "ring",
    ridden: "ride",
    risen: "rise",
    rode: "ride",
    rose: "rise",
    rung: "ring",
    said: "say",
    sang: "sing",
    sank: "sink",
    sat: "sit",
    saw: "see",
    sought: "seek",
    seen: "see",
    sent: "send",
    shaken: "shake",
    shone: "shine",
    shook: "shake",
    shot: "shoot",
    showed: "show",
    shown: "show",
    slept: "sleep",
    slid: "slide",
    smelt: "smell",
    sold: "sell",
    sped: "speed",
    spent: "spend",
    // spilt: "spill",
    spoke: "speak",
    spoken: "speak",
    spun: "spin",
    sprang: "spring",
    sprung: "spring",
    stank: "stink",
    stunk: "stink",
    stole: "steal",
    stolen: "steal",
    stood: "stand",
    strove: "strive",
    striven: "strive",
    struck: "strike",
    stuck: "stick",
    stung: "sting",
    sung: "sing",
    sunk: "sink",
    swam: "swim",
    swept: "sweep",
    swore: "swear",
    sworn: "swear",
    swum: "swim",
    swung: "swing",
    taken: "take",
    taught: "teach",
    thought: "think",
    threw: "throw",
    thrown: "throw",
    told: "tell",
    took: "take",
    tore: "tear",
    torn: "tear",
    underwent: "undergo",
    undergone: "undergo",
    understood: "understand",
    underlay: "underlie",
    underlain: "underlie",
    undertook: "undertake",
    undertaken: "undertake",
    wept: "weep",
    went: "go",
    withdrawn: "withdraw",
    withdrew: "withdraw",
    woke: "wake",
    woken: "wake",
    won: "win",
    wore: "wear",
    worn: "wear",
    written: "write",
    wrote: "write",
    wrung: "wring",
  },

  repeatableWords: [
    "a",
    "and",
    "but",
    "or",
    "so",
    "the",
    "this",
    "that",
    "these",
    "those",
    "here",
    "there",
    "not",
    "no",
    "yes",
    "be",
    "are",
    "have",
    "had",
    "do",
    "he",
    "him",
    "his",
    "I",
    "i",
    "me",
    "mine",
    "my",
    "you",
    "your",
    "yours",
    "she",
    "her",
    "hers",
    "it",
    "its",
    "we",
    "us",
    "our",
    "ours",
    "they",
    "their",
    "theirs",
    "one",
    "this",
    "that",
    "these",
    "those",
    "who",
    "which",
    "where",
    "when",
    "how",
    "why",
    "what",
    "that",
    "more",
    "in",
    "on",
    "at",
    "of",
    "by",
    "with",
    "to",
    "from",
    "for",
    "m",
    "re",
    "ve",
    "ll",
    "d",
    "t",
    "s",
    "wh",
    "yn",
    "sr",
    "some",
    "other",
    "about",
    "&"
  ],

  // List of irregular lexical items (NOT regular derivations)
  // e.g. hardly is not derived from adj: hard
  falseDerivations: ["inner", "outer", "lately", "hardly", "am",],

  // setOfCommonNames: new Set([
  personalNames: [
    "aaron",
    "abigail",
    "adam",
    "alan",
    "albert",
    "alexander",
    "alexis",
    "alice",
    "amanda",
    "amber",
    "amy",
    "andrea",
    "andrew",
    "angela",
    "ann",
    "anne",
    "anna",
    "anthony",
    "arthur",
    "ashley",
    "austin",
    "barbara",
    "benjamin",
    "becky",
    "betty",
    "beverly",
    "billy",
    "bobby",
    "brandon",
    "brenda",
    "brian",
    "brittany",
    "bruce",
    "bryan",
    "carl",
    "carol",
    "carolyn",
    "catherine",
    "charles",
    "charlotte",
    "cheryl",
    // "christian",
    "christina",
    "christine",
    "christopher",
    "cindy",
    "cynthia",
    "daniel",
    "danielle",
    "david",
    "deborah",
    "debra",
    "denise",
    "dennis",
    "diana",
    "diane",
    "donald",
    "donna",
    "doris",
    "dorothy",
    "douglas",
    "dylan",
    "edward",
    "elijah",
    "elizabeth",
    "emily",
    "emma",
    "eric",
    "ethan",
    "eugene",
    "evelyn",
    "frances",
    "frank",
    "gabriel",
    "gary",
    "george",
    "gerald",
    "gloria",
    // "grace",
    "gregory",
    "hannah",
    "harold",
    "heather",
    "helen",
    "henry",
    "hogan",
    "ingrid",
    "iria",
    "isabella",
    "jack",
    "jacob",
    "jacqueline",
    "james",
    "janet",
    "janice",
    "jason",
    "jean",
    "jeffrey",
    "jen",
    "jennifer",
    "jeremy",
    "jerry",
    "jesse",
    "jessica",
    "joan",
    "joe",
    "john",
    "jonathan",
    "jordan",
    "jose",
    "joseph",
    "joshua",
    //"joy",
    "joyce",
    "juan",
    "judith",
    "judy",
    "julia",
    "julie",
    "justin",
    "karen",
    "katherine",
    "kathleen",
    "kathryn",
    "kayla",
    "keith",
    "kelly",
    "kenneth",
    "kevin",
    "kimberly",
    "kyle",
    "larry",
    "laura",
    "lauren",
    "lawrence",
    "linda",
    "lisa",
    "logan",
    "lori",
    "louis",
    "lynn",
    "madison",
    "margaret",
    "maria",
    "marie",
    "marilyn",
    "mark",
    "martha",
    "mary",
    "mason",
    "matthew",
    "megan",
    "melissa",
    "michael",
    "michelle",
    "miranda",
    "nancy",
    "natalie",
    "nathan",
    "nicholas",
    "nicole",
    "noah",
    "olivia",
    "ouyang",
    "pamela",
    "patricia",
    "patrick",
    "paul",
    "peter",
    "philip",
    "rachel",
    "ralph",
    "randy",
    "raymond",
    "rebecca",
    "richard",
    "robert",
    "roger",
    "ronald",
    "roy",
    "russell",
    "ruth",
    "ryan",
    "sally",
    "samantha",
    "samuel",
    "sandra",
    "sara",
    "sarah",
    "scott",
    "sean",
    "sharon",
    "shirley",
    "simon",
    "sophia",
    "stan",
    "stephanie",
    "stephen",
    "steven",
    "susan",
    "teresa",
    "terry",
    "theresa",
    "thomas",
    "timothy",
    "tim",
    "tyler",
    "victoria",
    "vincent",
    "virginia",
    "vivian",
    "walter",
    "wayne",
    "william",
    "willie",
    "zachary",
    // ])
  ],

  variantWords: {
    // n.b. these are stripped of trailing -e to allow match with -ing / -ed

    // businessman: "businessperson",
    // businesswoman: "businessperson",
    // draught: "draft", // on list
    // labell: "label",
    // travell: "travel",
    // vet: "veterinarian",
    ad: "advertisement",
    advisor: "adviser",
    aeroplan: "airplane",
    ageing: "aging",
    aluminum: "aluminium", // i.e. the 'british' is standard
    analytic: "analytical",
    appal: "appall",
    archeology: "archaeology",
    artefact: "artifact",
    auntie: "aunt",
    aunty: "aunt",
    axe: "ax",
    bacterium: "bacteria",
    barbq: "barbecue",
    bbq: "barbecue",
    blond: "blonde",
    bookshop: "bookstore",
    botanic: "botanical",
    cab: "taxi",
    carer: "caretaker",
    carryout: "takeaway",
    catalogu: "catalog",
    catsup: "ketchup",
    centigrade: "celsius",
    chairman: "chair",
    chairwoman: "chair",
    chequ: "check",
    chequebook: "checkbook",
    chili: "chilli",
    cosy: "cozy",
    councillor: "councilor",
    counsellor: "counselor",
    crosswalk: "crossing",
    datum: "data",
    dependant: "dependent",
    despatch: "dispatch",
    disc: "disk",
    distil: "distill",
    donut: "doughnut",
    dorm: "dormitory",
    enquir: "inquire / inquiry",
    enrol: "enroll",
    fulfill: "fulfil",
    gaol: "jail",
    gramm: "gram",
    grey: "gray",
    groom: "bridegroom",
    guerilla: "guerrilla",
    gull: "seagull",
    homogenous: "homogeneous",
    icebox: "refrigerator",
    instalment: "installment",
    jewelry: "jewellery",
    judgement: "judgment",
    kitty: "kitten",
    lab: "laboratory",
    ladybird: "ladybug",
    limo: "limousine",
    litchi: "lychee",
    mailman: "mail carrier",
    mamma: "mother",
    manoeuvr: "maneuver", // include because contains oe>e AND re>er
    mom: "mother",
    momma: "mother",
    mommy: "mother",
    mould: "mold",
    mum: "mother",
    mummy: "mother",
    nope: "no",
    orientat: "orient",
    pingpong: "table tennis",
    plough: "plow",
    postman: "mail carrier",
    programme: "program",
    providing: "provided",
    pyjama: "pajama",
    quartette: "quartet",
    railway: "railroad",
    rhino: "rhinoceros",
    rotatory: "rotary",
    sceptical: "skeptical",
    skilful: "skillful",
    sledge: "sled",
    soya: "soy",
    soyabean: "soybean",
    spaceship: "spacecraft",
    specialit: "specialty",
    streetcar: "trolley",
    sulphur: "sulfur",
    symbolical: "symbolic",
    takeout: "takeaway",
    taxicab: "taxi",
    tb: "tuberculosis",
    teeshirt: "t-shirt",
    tram: "trolley",
    tramcar: "trolley",
    tshirt: "t-shirt",
    tummy: "stomach",
    tyre: "tire",
    vet: "veteran / veterinarian",
    vs: "versus",
    whisky: "whiskey",
    xmas: "christmas",
    yoghurt: "yogurt",
  },

  abbreviations: {
    mon: "monday",
    tue: "tuesday",
    tues: "tuesday",
    wed: "wednesday",
    weds: "wednesday",
    thu: "thursday",
    thur: "thursday",
    thurs: "thursday",
    fri: "friday",
    sat: "saturday",
    sun: "saturday",
    jan: "january",
    feb: "february",
    mar: "march",
    apr: "april",
    jun: "june",
    jul: "july",
    aug: "august",
    sep: "september",
    sept: "september",
    oct: "october",
    nov: "november",
    dec: "december",
    vol: "volume",
    kg: "kilogram",
    km: "kilometer",
    gm: "gram",
    cm: "centimeter",
    mm: "millimeter",
    lb: "pound",
    oz: "ounce",
    l: "liter",
    m: "meter:mile",
    p: "page:penny",
    g: "gram",
  },


  variantSuffixes: [
    ["enc", "ense"],    // licence
    // ["e", ""],
    ["r", "er"],        // centre
    ["is", "ize"],      // organise
    ["is", "ice"],      // practise
    ["lys", "lyze"],    // analyse
    ["ogu", "og"],      // dialogue
    ["eabl", "able"],   // likeable
    ["ward", "ward"],   //  downwards
  ],

  variantLetters: [
    ["ou", "o"],
    ["ll", "l"],
    ["ae", "e"],
    ["oe", "e"],
    ["ss", "s"],
  ],

  notLetterVariant: [
    "fourth",
  ],


  gendered_nouns: {
    businessm: 'businessperson',
    businesswom: 'businessperson',
    chairm: 'chairperson',
    chairwom: 'chairperson',
    firem: 'firefighter',
    mailm: 'mail carrier',
    postm: 'mail carrier',
    salesm: 'salesperson',
    saleswom: 'salesperson',
    spokesm: 'spokesperson',
    spokeswom: 'spokesperson',
    sportsm: 'sportsperson',
    sportswom: 'sportsperson',
    stewardess: 'steward',
  },

}

V.OFFLIST = LOOKUP.level_headings.length;
V.levelSubs = LOOKUP.level_headings.concat(LOOKUP.offlist_subs);

